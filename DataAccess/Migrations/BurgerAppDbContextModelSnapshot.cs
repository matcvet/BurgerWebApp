// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(BurgerAppDbContext))]
    partial class BurgerAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DomainModels.Burger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Burger", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Beef, Cheese, Onion, Tomatoes, Kethcup, Lettuce",
                            ImageUrl = "https://www.kitchensanctuary.com/wp-content/uploads/2021/05/Double-Cheeseburger-tall-FS-38.webp",
                            Name = "Cheeseburger"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Beef, Cheese, Onion, Tomatoes, Kethcup, Lettuce",
                            ImageUrl = "https://www.tastingtable.com/img/gallery/heres-how-hamburgers-got-their-name/intro-1653066580.webp",
                            Name = "Hamburger"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Chicken, Onions, Tomatoes, Kethcup, Lettuce",
                            ImageUrl = "https://i1.wp.com/gofry.com.fj/wp-content/uploads/2019/04/Chicken_Burger-scaled-e1624614963511.jpg?fit=600%2C583&ssl=1",
                            Name = "Chickenburger"
                        });
                });

            modelBuilder.Entity("DomainModels.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BurgerId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BurgerId");

                    b.HasIndex("SizeId");

                    b.ToTable("MenuItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BurgerId = 1,
                            Price = 100,
                            SizeId = 1
                        },
                        new
                        {
                            Id = 2,
                            BurgerId = 1,
                            Price = 130,
                            SizeId = 2
                        },
                        new
                        {
                            Id = 3,
                            BurgerId = 1,
                            Price = 150,
                            SizeId = 3
                        },
                        new
                        {
                            Id = 4,
                            BurgerId = 2,
                            Price = 120,
                            SizeId = 1
                        },
                        new
                        {
                            Id = 5,
                            BurgerId = 2,
                            Price = 150,
                            SizeId = 2
                        },
                        new
                        {
                            Id = 6,
                            BurgerId = 2,
                            Price = 170,
                            SizeId = 3
                        },
                        new
                        {
                            Id = 7,
                            BurgerId = 3,
                            Price = 110,
                            SizeId = 1
                        },
                        new
                        {
                            Id = 8,
                            BurgerId = 3,
                            Price = 140,
                            SizeId = 2
                        },
                        new
                        {
                            Id = 9,
                            BurgerId = 3,
                            Price = 180,
                            SizeId = 3
                        });
                });

            modelBuilder.Entity("DomainModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("DomainModels.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("DomainModels.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Size", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "10cm",
                            Name = "S"
                        },
                        new
                        {
                            Id = 2,
                            Description = "15cm",
                            Name = "M"
                        },
                        new
                        {
                            Id = 3,
                            Description = "20cm",
                            Name = "XL"
                        });
                });

            modelBuilder.Entity("DomainModels.MenuItem", b =>
                {
                    b.HasOne("DomainModels.Burger", "Burger")
                        .WithMany()
                        .HasForeignKey("BurgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModels.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Burger");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("DomainModels.OrderItem", b =>
                {
                    b.HasOne("DomainModels.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModels.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DomainModels.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
